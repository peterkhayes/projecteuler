// Generated by CoffeeScript 1.6.3
(function() {
  $(document).ready(function() {
    var arrayToNumber, num, pandigitals, permutation, permutations, permute, prime, result, _i, _len;
    arrayToNumber = function(array) {
      var i, str, _i, _len;
      str = "";
      for (_i = 0, _len = array.length; _i < _len; _i++) {
        i = array[_i];
        str += i;
      }
      return parseInt(str, 10);
    };
    prime = function(num) {
      var i, root, _i;
      if (num < 2) {
        return false;
      }
      if (num < 4) {
        return true;
      }
      if (num % 2 === 0 || num % 3 === 0) {
        return false;
      }
      root = Math.sqrt(num);
      for (i = _i = 5; 5 <= root ? _i <= root : _i >= root; i = 5 <= root ? ++_i : --_i) {
        if (num % i === 0) {
          return false;
        }
      }
      return true;
    };
    permute = function(array) {
      var all_perms, i, len, perm, pivot, remainder, sub_perm, sub_perms, _i, _j, _len;
      if (array.length === 1) {
        return array;
      }
      all_perms = [];
      len = array.length;
      for (i = _i = 0; 0 <= len ? _i < len : _i > len; i = 0 <= len ? ++_i : --_i) {
        pivot = array[i];
        perm = [pivot];
        remainder = array.slice(0, i).concat(array.slice(i + 1, len));
        sub_perms = permute(remainder);
        for (_j = 0, _len = sub_perms.length; _j < _len; _j++) {
          sub_perm = sub_perms[_j];
          all_perms.push(perm.concat(sub_perm));
        }
      }
      return all_perms;
    };
    result = 0;
    permutations = permute([1, 2, 3, 4, 5, 6, 7]);
    pandigitals = (function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = permutations.length; _i < _len; _i++) {
        permutation = permutations[_i];
        _results.push(arrayToNumber(permutation));
      }
      return _results;
    })();
    pandigitals.sort(function(a, b) {
      return b - a;
    });
    console.log(pandigitals);
    for (_i = 0, _len = pandigitals.length; _i < _len; _i++) {
      num = pandigitals[_i];
      if (prime(num)) {
        result = num;
        break;
      }
    }
    return $('#answer').text(result);
  });

}).call(this);
